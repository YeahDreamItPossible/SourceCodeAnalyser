  (1:0-6) class A {               <--    (3:0-6) class A {
          ^^^^^^                                 ^^^^^^

  (1:6-7) ass A {                 <--    (3:6-7) ass A {
              ^                                      ^

  (1:7-8) ss A {                  <--    (3:7-8) ss A {
              ^                                      ^

  (1:8-9) s A {                   <--    (3:8-9) s A {
              ^                                      ^

  (1:8-9) s A {                   <--   (4:2-14)   constructor() {
              ^                                    ^^^^^^^^^^^^

  (1:8-9) s A {                   <--  (4:14-17) tor() {
              ^                                      ^^^

  (1:8-9) s A {                   <--   (5:4-16)     babelHelpers.cla
              ^                                      ^^^^^^^^^^^^

  (1:8-9) s A {                   <--  (5:16-17) pers.clas
              ^                                      ^

  (1:8-9) s A {                   <--  (5:17-43) ers.classPrivateMethodInitSpec(thi
              ^                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^

  (1:8-9) s A {                   <--  (5:43-50) Spec(this, _A_b
              ^                                      ^^^^^^^

  (1:8-9) s A {                   <--  (5:50-58) is, _A_brand);
              ^                                      ^^^^^^^^

  (1:8-9) s A {                   <--  (5:58-60) rand);
              ^                                      ^^

  (2:2-8)   #field;               <--   (6:4-16)     babelHelpers.cla
            ^^^^^^                                   ^^^^^^^^^^^^

  (2:2-8)   #field;               <--  (6:16-17) pers.clas
            ^^^^^^                                   ^

  (2:2-8)   #field;               <--  (6:17-42) ers.classPrivateFieldInitSpec(thi
            ^^^^^^                                   ^^^^^^^^^^^^^^^^^^^^^^^^^

  (2:2-8)   #field;               <--  (6:42-49) Spec(this, _fie
            ^^^^^^                                   ^^^^^^^

  (2:2-8)   #field;               <--  (6:49-55) is, _field, vo
            ^^^^^^                                   ^^^^^^

  (2:8-9) ield;                   <--  (6:55-65) ield, void 0);
              ^                                      ^^^^^^^^^^

  (2:9-9) eld;                    <--    (7:2-3)   }
             ><                                    ^

  (6:2-8)   method() {            <--    (8:2-8)   method() {
            ^^^^^^                                 ^^^^^^

 (6:8-11) thod() {                <--    (8:8-9) thod() {
              ^^^                                    ^

 (6:8-11) thod() {                <--   (8:9-11) hod() {
              ^^^                                    ^^

(6:11-12) d() {                   <--  (8:11-12) d() {
              ^                                      ^

  (7:4-9)     this.#fie           <--   (9:4-16)     babelHelpers.cla
              ^^^^^                                  ^^^^^^^^^^^^

  (7:4-9)     this.#fie           <--  (9:16-17) pers.clas
              ^^^^^                                  ^

  (7:4-9)     this.#fie           <--  (9:17-38) ers.classPrivateFieldSet2(_fi
              ^^^^^                                  ^^^^^^^^^^^^^^^^^^^^^

  (7:4-9)     this.#fie           <--  (9:38-39) Set2(_fie
              ^^^^^                                  ^

 (7:9-15) his.#field = 4          <--  (9:39-45) et2(_field, th
              ^^^^^^                                 ^^^^^^

(7:15-15) ield = 4                <--  (9:45-47) ield, this
             ><                                      ^^

  (7:4-8)     this.#fi            <--  (9:47-51) ld, this, 42
              ^^^^                                   ^^^^

 (7:8-18) this.#field = 42;       <--  (9:51-53) this, 42);
              ^^^^^^^^^^                             ^^

(7:18-18) d = 42;                 <--  (9:53-55) is, 42);
             ><                                      ^^

(7:14-15) field = 4               <--  (9:55-56) , 42);
              ^                                      ^

(7:15-21) ield = 42;              <--  (9:56-57)  42);
              ^^^^^^                                 ^

  (8:4-9)     this.#set           <--  (10:4-16)     babelHelpers.cla
              ^^^^^                                  ^^^^^^^^^^^^

  (8:4-9)     this.#set           <--  (10:16-17) pers.clas
              ^^^^^                                   ^

  (8:4-9)     this.#set           <--  (10:17-35) ers.classPrivateSetter(_A_
              ^^^^^                                   ^^^^^^^^^^^^^^^^^^

  (8:4-9)     this.#set           <--  (10:35-36) tter(_A_b
              ^^^^^                                   ^

  (8:4-9)     this.#set           <--  (10:36-44) ter(_A_brand, _s
              ^^^^^                                   ^^^^^^^^

  (8:4-9)     this.#set           <--  (10:44-46) rand, _set
              ^^^^^                                   ^^

 (8:9-16) his.#setter = 4         <--  (10:46-57) nd, _set_setter, th
              ^^^^^^^                                 ^^^^^^^^^^^

(8:16-16) tter = 4                <--  (10:57-59) tter, this
             ><                                       ^^

  (8:4-8)     this.#se            <--  (10:59-63) er, this, 43
              ^^^^                                    ^^^^

 (8:8-19) this.#setter = 43;      <--  (10:63-65) this, 43);
              ^^^^^^^^^^^                             ^^

(8:19-19) r = 43;                 <--  (10:65-67) is, 43);
             ><                                       ^^

(8:15-16) etter = 4               <--  (10:67-68) , 43);
              ^                                       ^

(8:16-22) tter = 43;              <--  (10:68-69)  43);
              ^^^^^^                                  ^

(11:4-10)     inExpr(thi          <--  (11:4-10)     inExpr(bab
              ^^^^^^                                 ^^^^^^

(11:10-11) Expr(this              <--  (11:10-11) Expr(babe
               ^                                      ^

(11:11-16) xpr(this.#fie          <--  (11:11-23) xpr(babelHelpers.cla
               ^^^^^                                  ^^^^^^^^^^^^

(11:11-16) xpr(this.#fie          <--  (11:23-24) pers.clas
               ^^^^^                                  ^

(11:11-16) xpr(this.#fie          <--  (11:24-45) ers.classPrivateFieldSet2(_fi
               ^^^^^                                  ^^^^^^^^^^^^^^^^^^^^^

(11:11-16) xpr(this.#fie          <--  (11:45-46) Set2(_fie
               ^^^^^                                  ^

(11:16-22) his.#field = 5         <--  (11:46-52) et2(_field, th
               ^^^^^^                                 ^^^^^^

(11:22-22) ield = 5               <--  (11:52-54) ield, this
              ><                                      ^^

(11:11-15) xpr(this.#fi           <--  (11:54-58) ld, this, 5)
               ^^^^                                   ^^^^

(11:15-25) this.#field = 5);      <--  (11:58-60) this, 5));
               ^^^^^^^^^^                             ^^

(11:25-26) d = 5);                <--  (11:60-61) is, 5));
               ^                                      ^

(11:21-26) field = 5);            <--  (11:61-62) s, 5));
               ^^^^^                                  ^

(11:26-27)  = 5);                 <--  (11:62-63) , 5));
               ^                                      ^

(11:27-28) = 5);                  <--  (11:63-64)  5));
               ^                                      ^

 (12:2-3)   }                     <--   (12:2-3)   }
            ^                                      ^

 (13:0-1) }                       <--   (13:0-1) }
          ^                                      ^

 (13:1-1) }                       <--   (14:0-9) function _set
          ><                                     ^^^^^^^^^

 (13:1-1) }                       <--  (14:9-21) ion _set_setter(_thi
          ><                                         ^^^^^^^^^^^^

 (13:1-1) }                       <--  (14:21-26) ter(_this, va
          ><                                          ^^^^^

 (13:1-1) }                       <--  (14:26-28) this, valu
          ><                                          ^^

(4:14-19) ter(value) {}           <--  (14:28-33) is, value) {}
              ^^^^^                                   ^^^^^

(4:19-21) alue) {}                <--  (14:33-35) alue) {}
              ^^                                      ^^

(4:21-22) ue) {}                  <--  (14:35-36) ue) {}
              ^                                       ^

(4:22-23) e) {}                   <--  (14:36-37) e) {}
              ^                                       ^
